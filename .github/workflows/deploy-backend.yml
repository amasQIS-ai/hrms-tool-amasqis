name: Deploy Backend

on:
  push:
    branches: [ "main" ]
    paths:
      - "backend/**"
      - ".github/workflows/deploy-backend.yml"
  workflow_dispatch: {}

env:
  BACKEND_DIR: /srv/hrms/backend/app/hrms-tool-amasqis/backend

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure backend dir on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          port: ${{ secrets.VPS_PORT }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -euxo pipefail
            mkdir -p ${{ env.BACKEND_DIR }}

      - name: Upload backend sources
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          port: ${{ secrets.VPS_PORT }}
          key: ${{ secrets.SSH_KEY }}
          source: "backend/*"
          target: "${{ env.BACKEND_DIR }}/"

      - name: Install & restart PM2 on server (with fallback if no lockfile)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          port: ${{ secrets.VPS_PORT }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -euxo pipefail
            cd ${{ env.BACKEND_DIR }}
            if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
              npm ci
            else
              npm install
            fi
            # Do not overwrite .env â€“ it lives on the server already.
            if pm2 list | grep -q hrms-api; then
              pm2 reload hrms-api
            else
              pm2 start "node server.js" --name hrms-api --cwd ${{ env.BACKEND_DIR }}
            fi
            pm2 save
            pm2 status
